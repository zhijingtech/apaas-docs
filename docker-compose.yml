version: "3.7"
services:
  postgresd:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - type: bind
        source: ./postgresql/data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./postgresql/docker-entrypoint-initdb.d
        target: /docker-entrypoint-initdb.d
    networks:
      - intranet

  kratos-selfservice-ui-node:
    image: oryd/kratos-selfservice-ui-node:v1.3.1
    ports:
      - "4455:4455"
    environment:
      - KRATOS_PUBLIC_URL=http://kratos:4433/
      - KRATOS_BROWSER_URL=http://127.0.0.1:4433/
      - COOKIE_SECRET=changeme
      - CSRF_COOKIE_NAME=ory_csrf_ui
      - CSRF_COOKIE_SECRET=changeme
      - PORT=4455
      - SECURITY_MODE=
    networks:
      - intranet
    restart: on-failure
  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v1.3.1
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://root:secret@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ./kratos/config
        target: /etc/config/kratos
    networks:
      - intranet
  kratos-migrate:
    image: oryd/kratos:v1.3.1
    environment:
      - DSN=postgres://root:secret@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: ./kratos/config
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - "4436:4436"
      - "4437:4437"
    networks:
      - intranet

  hydra:
    image: oryd/hydra:v2.2.0
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: bind
        source: ./hydra/config
        target: /etc/config/hydra
    environment:
      - DSN=postgres://root:secret@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
    restart: unless-stopped
    depends_on:
      - hydra-migrate
    networks:
      - intranet
  hydra-migrate:
    image: oryd/hydra:v2.2.0
    environment:
      - DSN=postgres://root:secret@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: bind
        source: ./hydra/config
        target: /etc/config/hydra
    restart: on-failure
    networks:
      - intranet
  consent:
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
    image: oryd/hydra-login-consent-node:v2.2.0
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - intranet

  keto-migrate:
    image: oryd/keto:v0.12.0-alpha.0
    links:
      - postgresd:postgresd
    volumes:
      - type: bind
        source: ./keto/config
        target: /home/ory
    environment:
      - LOG_LEVEL=debug
      - DSN=postgres://root:secret@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
    command: ["migrate", "up", "-y"]
    restart: on-failure
    networks:
      - intranet
  keto:
    image: oryd/keto:v0.12.0-alpha.0
    volumes:
      - type: bind
        source: ./keto/config
        target: /home/ory
    ports:
      - "4466:4466"
      - "4467:4467"
    depends_on:
      - keto-migrate
    environment:
      - DSN=postgres://root:secret@postgresd:5432/postgres?sslmode=disable&max_conns=20&max_idle_conns=4
    restart: on-failure
    networks:
      - intranet

  oathkeeper:
    image: oryd/oathkeeper:v0.40.7
    ports:
      - "4555:4555"
      - "4556:4556"
    command: serve --config=/etc/config/oathkeeper/config.yaml
    # environment:
    #   - TRACING_PROVIDER=jaeger
    #   - TRACING_PROVIDER_JAEGER_SAMPLING_SERVER_URL=http://jaeger:5778/sampling
    #   - TRACING_PROVIDER_JAEGER_LOCAL_AGENT_ADDRESS=jaeger:6831
    #   - TRACING_PROVIDER_JAEGER_SAMPLING_TYPE=const
    #   - TRACING_PROVIDER_JAEGER_SAMPLING_VALUE=1
    volumes:
      - type: bind
        source: ./oathkeeper/config
        target: /etc/config/oathkeeper
    restart: on-failure
    networks:
      - intranet
  # jaeger:
  #   image: jaegertracing/all-in-one
  #   ports:
  #     - "16686:16686" # The UI port
  #   networks:
  #     - intranet

networks:
  intranet: